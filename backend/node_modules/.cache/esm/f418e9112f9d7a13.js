let comparePassword,hashPassword;_2f9‍.w("../helpers/auth.js",[["comparePassword",["comparePassword"],function(v){comparePassword=v}],["hashPassword",["hashPassword"],function(v){hashPassword=v}]]);const User = require( "../models/users.js");

const register = async (req,res) => {
    _2f9‍.g.console.log("Register EndPoint: ", req.body);
    const { name, email, password, question, secret } = req.body;

    // Validation
    if(!name) { return res.status(400).send(`${name} is required! `)};
    if(!password || 6 <= password.length > 64 ) { return res.status(400).send(`${password} is required! and it should be betwwen  6  and 64 characters long`)};
    if(!email) { return res.status(400).send(`${email} is required! `)};
    if(!question) { return res.status(400).send(`${question} is required! `)};
    if(!secret) { return res.status(400).send(`${secret} is required! `)};

    const email_exist = await User.findOne({email});
    if(email_exist){ return res.status(400).send(`${email} is already register. Please reset your password or use a new email.`)}

    const hashPassword = await hashPassword(password);

    const user = new User({name, password: hashPassword, email, question, secret});

    try{
        await user.save();
        _2f9‍.g.console.log('Register User: ', user);
        return res.json({ ok: true});
    }
    catch(err){
        _2f9‍.g.console.log("User Registration failed: ", err);
        return res.status(400).send('Error: unabled to save User. Try again ')
    }
}
module.exports = register ;